"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getEfsDriverPolicyStatements = void 0;
function getEfsDriverPolicyStatements(kmsKeys) {
    const result = [
        {
            "Effect": "Allow",
            "Action": [
                "elasticfilesystem:DescribeAccessPoints",
                "elasticfilesystem:DescribeFileSystems"
            ],
            "Resource": "*"
        },
        {
            "Effect": "Allow",
            "Action": [
                "elasticfilesystem:CreateAccessPoint",
                "elasticfilesystem:TagResource",
            ],
            "Resource": "*",
            "Condition": {
                "StringLike": {
                    "aws:RequestTag/efs.csi.aws.com/cluster": "true"
                }
            }
        },
        {
            "Effect": "Allow",
            "Action": "elasticfilesystem:DeleteAccessPoint",
            "Resource": "*",
            "Condition": {
                "StringEquals": {
                    "aws:ResourceTag/efs.csi.aws.com/cluster": "true"
                }
            }
        }
    ];
    if (kmsKeys) {
        const kmsKeysArns = kmsKeys.map((k) => k.keyArn);
        const kmsPolicy = [
            {
                Effect: "Allow",
                Action: ["kms:CreateGrant", "kms:ListGrants", "kms:RevokeGrant"],
                Resource: kmsKeysArns,
                Condition: {
                    Bool: {
                        "kms:GrantIsForAWSResource": "true",
                    },
                },
            },
            {
                Effect: "Allow",
                Action: [
                    "kms:Encrypt",
                    "kms:Decrypt",
                    "kms:ReEncrypt*",
                    "kms:GenerateDataKey*",
                    "kms:DescribeKey",
                ],
                Resource: kmsKeysArns,
            },
        ];
        result.push(...kmsPolicy);
    }
    return result;
}
exports.getEfsDriverPolicyStatements = getEfsDriverPolicyStatements;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWFtLXBvbGljeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9hZGRvbnMvZWZzLWNzaS1kcml2ZXIvaWFtLXBvbGljeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFhQSxTQUFnQiw0QkFBNEIsQ0FDMUMsT0FBbUI7SUFFbkIsTUFBTSxNQUFNLEdBQWdCO1FBQzFCO1lBQ0UsUUFBUSxFQUFFLE9BQU87WUFDakIsUUFBUSxFQUFFO2dCQUNSLHdDQUF3QztnQkFDeEMsdUNBQXVDO2FBQ3hDO1lBQ0QsVUFBVSxFQUFFLEdBQUc7U0FDaEI7UUFDRDtZQUNFLFFBQVEsRUFBRSxPQUFPO1lBQ2pCLFFBQVEsRUFBRTtnQkFDUixxQ0FBcUM7Z0JBQ3JDLCtCQUErQjthQUNoQztZQUNELFVBQVUsRUFBRSxHQUFHO1lBQ2YsV0FBVyxFQUFFO2dCQUNYLFlBQVksRUFBRTtvQkFDWix3Q0FBd0MsRUFBRSxNQUFNO2lCQUNqRDthQUNGO1NBQ0Y7UUFDRDtZQUNFLFFBQVEsRUFBRSxPQUFPO1lBQ2pCLFFBQVEsRUFBRSxxQ0FBcUM7WUFDL0MsVUFBVSxFQUFFLEdBQUc7WUFDZixXQUFXLEVBQUU7Z0JBQ1gsY0FBYyxFQUFFO29CQUNkLHlDQUF5QyxFQUFFLE1BQU07aUJBQ2xEO2FBQ0Y7U0FDRjtLQUNGLENBQUM7SUFDRixJQUFJLE9BQU8sRUFBRTtRQUNYLE1BQU0sV0FBVyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNqRCxNQUFNLFNBQVMsR0FBZ0I7WUFDN0I7Z0JBQ0UsTUFBTSxFQUFFLE9BQU87Z0JBQ2YsTUFBTSxFQUFFLENBQUMsaUJBQWlCLEVBQUUsZ0JBQWdCLEVBQUUsaUJBQWlCLENBQUM7Z0JBQ2hFLFFBQVEsRUFBRSxXQUFXO2dCQUNyQixTQUFTLEVBQUU7b0JBQ1QsSUFBSSxFQUFFO3dCQUNKLDJCQUEyQixFQUFFLE1BQU07cUJBQ3BDO2lCQUNGO2FBQ0Y7WUFDRDtnQkFDRSxNQUFNLEVBQUUsT0FBTztnQkFDZixNQUFNLEVBQUU7b0JBQ04sYUFBYTtvQkFDYixhQUFhO29CQUNiLGdCQUFnQjtvQkFDaEIsc0JBQXNCO29CQUN0QixpQkFBaUI7aUJBQ2xCO2dCQUNELFFBQVEsRUFBRSxXQUFXO2FBQ3RCO1NBQ0YsQ0FBQztRQUNGLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxTQUFTLENBQUMsQ0FBQztLQUMzQjtJQUNELE9BQU8sTUFBTSxDQUFDO0FBQ2hCLENBQUM7QUFoRUQsb0VBZ0VDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMga21zIGZyb20gXCJhd3MtY2RrLWxpYi9hd3Mta21zXCI7XG5cbmludGVyZmFjZSBTdGF0ZW1lbnQge1xuICBFZmZlY3Q6IHN0cmluZztcbiAgQWN0aW9uOiBzdHJpbmcgfCBzdHJpbmdbXTtcbiAgUmVzb3VyY2U6IHN0cmluZyB8IHN0cmluZ1tdO1xuICBDb25kaXRpb24/OiB7XG4gICAgU3RyaW5nRXF1YWxzPzogeyBba2V5OiBzdHJpbmddOiBzdHJpbmdbXSB8IHN0cmluZyB9O1xuICAgIFN0cmluZ0xpa2U/OiB7IFtrZXk6IHN0cmluZ106IHN0cmluZyB9O1xuICAgIEJvb2w/OiB7IFtrZXk6IHN0cmluZ106IHN0cmluZyB9O1xuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0RWZzRHJpdmVyUG9saWN5U3RhdGVtZW50cyhcbiAga21zS2V5cz86IGttcy5LZXlbXVxuKTogU3RhdGVtZW50W10ge1xuICBjb25zdCByZXN1bHQ6IFN0YXRlbWVudFtdID0gW1xuICAgIHtcbiAgICAgIFwiRWZmZWN0XCI6IFwiQWxsb3dcIixcbiAgICAgIFwiQWN0aW9uXCI6IFtcbiAgICAgICAgXCJlbGFzdGljZmlsZXN5c3RlbTpEZXNjcmliZUFjY2Vzc1BvaW50c1wiLFxuICAgICAgICBcImVsYXN0aWNmaWxlc3lzdGVtOkRlc2NyaWJlRmlsZVN5c3RlbXNcIlxuICAgICAgXSxcbiAgICAgIFwiUmVzb3VyY2VcIjogXCIqXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwiRWZmZWN0XCI6IFwiQWxsb3dcIixcbiAgICAgIFwiQWN0aW9uXCI6IFtcbiAgICAgICAgXCJlbGFzdGljZmlsZXN5c3RlbTpDcmVhdGVBY2Nlc3NQb2ludFwiLFxuICAgICAgICBcImVsYXN0aWNmaWxlc3lzdGVtOlRhZ1Jlc291cmNlXCIsXG4gICAgICBdLFxuICAgICAgXCJSZXNvdXJjZVwiOiBcIipcIixcbiAgICAgIFwiQ29uZGl0aW9uXCI6IHtcbiAgICAgICAgXCJTdHJpbmdMaWtlXCI6IHtcbiAgICAgICAgICBcImF3czpSZXF1ZXN0VGFnL2Vmcy5jc2kuYXdzLmNvbS9jbHVzdGVyXCI6IFwidHJ1ZVwiXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIHtcbiAgICAgIFwiRWZmZWN0XCI6IFwiQWxsb3dcIixcbiAgICAgIFwiQWN0aW9uXCI6IFwiZWxhc3RpY2ZpbGVzeXN0ZW06RGVsZXRlQWNjZXNzUG9pbnRcIixcbiAgICAgIFwiUmVzb3VyY2VcIjogXCIqXCIsXG4gICAgICBcIkNvbmRpdGlvblwiOiB7XG4gICAgICAgIFwiU3RyaW5nRXF1YWxzXCI6IHtcbiAgICAgICAgICBcImF3czpSZXNvdXJjZVRhZy9lZnMuY3NpLmF3cy5jb20vY2x1c3RlclwiOiBcInRydWVcIlxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICBdO1xuICBpZiAoa21zS2V5cykge1xuICAgIGNvbnN0IGttc0tleXNBcm5zID0ga21zS2V5cy5tYXAoKGspID0+IGsua2V5QXJuKTtcbiAgICBjb25zdCBrbXNQb2xpY3k6IFN0YXRlbWVudFtdID0gW1xuICAgICAge1xuICAgICAgICBFZmZlY3Q6IFwiQWxsb3dcIixcbiAgICAgICAgQWN0aW9uOiBbXCJrbXM6Q3JlYXRlR3JhbnRcIiwgXCJrbXM6TGlzdEdyYW50c1wiLCBcImttczpSZXZva2VHcmFudFwiXSxcbiAgICAgICAgUmVzb3VyY2U6IGttc0tleXNBcm5zLFxuICAgICAgICBDb25kaXRpb246IHtcbiAgICAgICAgICBCb29sOiB7XG4gICAgICAgICAgICBcImttczpHcmFudElzRm9yQVdTUmVzb3VyY2VcIjogXCJ0cnVlXCIsXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIEVmZmVjdDogXCJBbGxvd1wiLFxuICAgICAgICBBY3Rpb246IFtcbiAgICAgICAgICBcImttczpFbmNyeXB0XCIsXG4gICAgICAgICAgXCJrbXM6RGVjcnlwdFwiLFxuICAgICAgICAgIFwia21zOlJlRW5jcnlwdCpcIixcbiAgICAgICAgICBcImttczpHZW5lcmF0ZURhdGFLZXkqXCIsXG4gICAgICAgICAgXCJrbXM6RGVzY3JpYmVLZXlcIixcbiAgICAgICAgXSxcbiAgICAgICAgUmVzb3VyY2U6IGttc0tleXNBcm5zLFxuICAgICAgfSxcbiAgICBdO1xuICAgIHJlc3VsdC5wdXNoKC4uLmttc1BvbGljeSk7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbiJdfQ==