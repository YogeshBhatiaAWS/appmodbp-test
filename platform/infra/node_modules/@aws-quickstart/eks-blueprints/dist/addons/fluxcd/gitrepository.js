"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FluxGitRepository = void 0;
const utils_1 = require("../../utils");
/**
 * Flux GitRepository API defines a Source to produce an Artifact for a Git repository revision.
 */
class FluxGitRepository {
    constructor(repository) {
        this.repository = repository;
    }
    generate(name, namespace, fluxSyncInterval, fluxSecretRefName) {
        const repository = this.repository;
        const gitManifest = {
            apiVersion: "source.toolkit.fluxcd.io/v1beta2",
            kind: "GitRepository",
            metadata: {
                name: name,
                namespace: namespace
            },
            spec: {
                interval: fluxSyncInterval,
                url: repository.repoUrl,
                ref: {
                    branch: repository.targetRevision,
                },
            }
        };
        if (fluxSecretRefName) {
            (0, utils_1.setPath)(gitManifest, "spec.secretRef.name", fluxSecretRefName);
        }
        return gitManifest;
    }
}
exports.FluxGitRepository = FluxGitRepository;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2l0cmVwb3NpdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9hZGRvbnMvZmx1eGNkL2dpdHJlcG9zaXRvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EsdUNBQXNDO0FBRXRDOztHQUVHO0FBQ0gsTUFBYSxpQkFBaUI7SUFFMUIsWUFBNkIsVUFBcUM7UUFBckMsZUFBVSxHQUFWLFVBQVUsQ0FBMkI7SUFBRyxDQUFDO0lBRS9ELFFBQVEsQ0FBQyxJQUFZLEVBQUUsU0FBaUIsRUFBRSxnQkFBd0IsRUFBRSxpQkFBeUI7UUFFaEcsTUFBTSxVQUFVLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQztRQUNuQyxNQUFNLFdBQVcsR0FBSTtZQUNqQixVQUFVLEVBQUUsa0NBQWtDO1lBQzlDLElBQUksRUFBRSxlQUFlO1lBQ3JCLFFBQVEsRUFBRTtnQkFDTixJQUFJLEVBQUUsSUFBSTtnQkFDVixTQUFTLEVBQUUsU0FBUzthQUN2QjtZQUNELElBQUksRUFBRTtnQkFDRixRQUFRLEVBQUUsZ0JBQWdCO2dCQUMxQixHQUFHLEVBQUUsVUFBVSxDQUFDLE9BQU87Z0JBQ3ZCLEdBQUcsRUFBRTtvQkFDRCxNQUFNLEVBQUUsVUFBVSxDQUFDLGNBQWM7aUJBQ3BDO2FBQ0o7U0FDSixDQUFDO1FBQ0YsSUFBSSxpQkFBaUIsRUFBRTtZQUNuQixJQUFBLGVBQU8sRUFBQyxXQUFXLEVBQUUscUJBQXFCLEVBQUUsaUJBQWlCLENBQUMsQ0FBQztTQUNsRTtRQUNELE9BQU8sV0FBVyxDQUFDO0lBQ3ZCLENBQUM7Q0FDSjtBQTNCRCw4Q0EyQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBzcGkgZnJvbSBcIi4uLy4uL3NwaVwiO1xuaW1wb3J0IHsgc2V0UGF0aCB9IGZyb20gXCIuLi8uLi91dGlsc1wiO1xuXG4vKipcbiAqIEZsdXggR2l0UmVwb3NpdG9yeSBBUEkgZGVmaW5lcyBhIFNvdXJjZSB0byBwcm9kdWNlIGFuIEFydGlmYWN0IGZvciBhIEdpdCByZXBvc2l0b3J5IHJldmlzaW9uLlxuICovXG5leHBvcnQgY2xhc3MgRmx1eEdpdFJlcG9zaXRvcnkge1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSByZXBvc2l0b3J5OiBzcGkuQXBwbGljYXRpb25SZXBvc2l0b3J5KSB7fVxuXG4gICAgcHVibGljIGdlbmVyYXRlKG5hbWU6IHN0cmluZywgbmFtZXNwYWNlOiBzdHJpbmcsIGZsdXhTeW5jSW50ZXJ2YWw6IHN0cmluZywgZmx1eFNlY3JldFJlZk5hbWU6IHN0cmluZykge1xuXG4gICAgICAgIGNvbnN0IHJlcG9zaXRvcnkgPSB0aGlzLnJlcG9zaXRvcnk7XG4gICAgICAgIGNvbnN0IGdpdE1hbmlmZXN0ID0gIHtcbiAgICAgICAgICAgIGFwaVZlcnNpb246IFwic291cmNlLnRvb2xraXQuZmx1eGNkLmlvL3YxYmV0YTJcIixcbiAgICAgICAgICAgIGtpbmQ6IFwiR2l0UmVwb3NpdG9yeVwiLFxuICAgICAgICAgICAgbWV0YWRhdGE6IHtcbiAgICAgICAgICAgICAgICBuYW1lOiBuYW1lLFxuICAgICAgICAgICAgICAgIG5hbWVzcGFjZTogbmFtZXNwYWNlXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc3BlYzoge1xuICAgICAgICAgICAgICAgIGludGVydmFsOiBmbHV4U3luY0ludGVydmFsLFxuICAgICAgICAgICAgICAgIHVybDogcmVwb3NpdG9yeS5yZXBvVXJsLFxuICAgICAgICAgICAgICAgIHJlZjoge1xuICAgICAgICAgICAgICAgICAgICBicmFuY2g6IHJlcG9zaXRvcnkudGFyZ2V0UmV2aXNpb24sXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgaWYgKGZsdXhTZWNyZXRSZWZOYW1lKSB7XG4gICAgICAgICAgICBzZXRQYXRoKGdpdE1hbmlmZXN0LCBcInNwZWMuc2VjcmV0UmVmLm5hbWVcIiwgZmx1eFNlY3JldFJlZk5hbWUpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBnaXRNYW5pZmVzdDtcbiAgICB9XG59XG4iXX0=