"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.serviceMappings = exports.AckServiceName = void 0;
/**
 * List of all supported supported AWS services by ACK Addon.
 */
var AckServiceName;
(function (AckServiceName) {
    AckServiceName["APIGATEWAYV2"] = "apigatewayv2";
    AckServiceName["APPLICATIONAUTOSCALING"] = "applicationautoscaling";
    AckServiceName["CLOUDTRAIL"] = "cloudtrail";
    AckServiceName["DYNAMODB"] = "dynamodb";
    AckServiceName["EC2"] = "ec2";
    AckServiceName["ECR"] = "ecr";
    AckServiceName["EKS"] = "eks";
    AckServiceName["ELASTICACHE"] = "elasticache";
    AckServiceName["ELASTICSEARCHSERVICE"] = "elasticsearchservice";
    AckServiceName["EMRCONTAINERS"] = "emrcontainers";
    AckServiceName["IAM"] = "iam";
    AckServiceName["KINESIS"] = "kinesis";
    AckServiceName["KMS"] = "kms";
    AckServiceName["LAMBDA"] = "lambda";
    AckServiceName["MEMORYDB"] = "memorydb";
    AckServiceName["MQ"] = "mq";
    AckServiceName["OPENSEARCHSERVICE"] = "opensearchservice";
    AckServiceName["PROMETHEUSSERVICE"] = "prometheusservice";
    AckServiceName["RDS"] = "rds";
    AckServiceName["S3"] = "s3";
    AckServiceName["SFN"] = "sfn";
    AckServiceName["SNS"] = "sns";
    AckServiceName["ACM"] = "acm";
    AckServiceName["ROUTE53"] = "route53";
    AckServiceName["SQS"] = "sqs";
    AckServiceName["SAGEMAKER"] = "sagemaker";
    AckServiceName["EVENTBRIDGE"] = "eventbridge";
})(AckServiceName || (exports.AckServiceName = AckServiceName = {}));
/**
 * List of all Service Mappings such as chart, version, managed IAM policy
 * for all supported AWS services by ACK Addon.
 */
exports.serviceMappings = {
    [AckServiceName.IAM]: {
        chart: "iam-chart",
        version: "1.2.2",
        managedPolicyName: "IAMFullAccess"
    },
    [AckServiceName.RDS]: {
        chart: "rds-chart",
        version: "1.1.5",
        managedPolicyName: "AmazonRDSFullAccess"
    },
    [AckServiceName.EC2]: {
        chart: "ec2-chart",
        version: "1.0.3",
        managedPolicyName: "AmazonRDSFullAccess"
    },
    [AckServiceName.S3]: {
        chart: "s3-chart",
        version: "1.0.4",
        managedPolicyName: "AmazonS3FullAccess"
    },
    [AckServiceName.DYNAMODB]: {
        chart: "dynamodb-chart",
        version: "1.1.2",
        managedPolicyName: "AmazonDynamoDBFullAccess"
    },
    [AckServiceName.ECR]: {
        chart: "ecr-chart",
        version: "1.0.5",
        managedPolicyName: "AmazonEC2ContainerRegistryFullAccess"
    },
    [AckServiceName.SNS]: {
        chart: "sns-chart",
        version: "1.0.2",
        managedPolicyName: "AmazonSNSFullAccess"
    },
    [AckServiceName.APIGATEWAYV2]: {
        chart: "apigatewayv2-chart",
        version: "1.0.4",
        managedPolicyName: "AmazonAPIGatewayAdministrator"
    },
    [AckServiceName.ELASTICACHE]: {
        chart: "elasticache-chart",
        version: "0.0.26",
        managedPolicyName: "AmazonElastiCacheFullAccess"
    },
    [AckServiceName.OPENSEARCHSERVICE]: {
        chart: "opensearchservice-chart",
        version: "0.0.16",
        managedPolicyName: "AmazonOpenSearchServiceFullAccess"
    },
    [AckServiceName.MQ]: {
        chart: "mq-chart",
        version: "0.0.28",
        managedPolicyName: "AmazonMQFullAccess"
    },
    [AckServiceName.LAMBDA]: {
        chart: "lambda-chart",
        version: "1.1.0",
        managedPolicyName: "AWSLambda_FullAccess"
    },
    [AckServiceName.KMS]: {
        chart: "kms-chart",
        version: "1.0.5",
        managedPolicyName: "AWSKeyManagementServicePowerUser"
    },
    [AckServiceName.MEMORYDB]: {
        chart: "memorydb-chart",
        version: "1.0.1",
        managedPolicyName: "AmazonMemoryDBFullAccess"
    },
    [AckServiceName.EKS]: {
        chart: "eks-chart",
        version: "1.0.3",
        managedPolicyName: "AmazonEKSClusterPolicy"
    },
    [AckServiceName.APPLICATIONAUTOSCALING]: {
        chart: "applicationautoscaling-chart",
        version: "1.0.5",
        managedPolicyName: "AutoScalingFullAccess"
    },
    [AckServiceName.ELASTICSEARCHSERVICE]: {
        chart: "elasticsearchservice-chart",
        version: "0.0.2",
        managedPolicyName: "AmazonElasticsearchServiceRolePolicy"
    },
    [AckServiceName.PROMETHEUSSERVICE]: {
        chart: "prometheusservice-chart",
        version: "1.2.3",
        managedPolicyName: "AmazonPrometheusFullAccess"
    },
    [AckServiceName.EMRCONTAINERS]: {
        chart: "emrcontainers-chart",
        version: "1.0.2",
        managedPolicyName: "AmazonEMRContainersServiceRolePolicy"
    },
    [AckServiceName.SFN]: {
        chart: "sfn-chart",
        version: "1.0.3",
        managedPolicyName: "AWSStepFunctionsFullAccess"
    },
    [AckServiceName.KINESIS]: {
        chart: "kinesis-chart",
        version: "0.0.7",
        managedPolicyName: "AmazonKinesisFullAccess"
    },
    [AckServiceName.CLOUDTRAIL]: {
        chart: "cloudtrail-chart",
        version: "1.0.3",
        managedPolicyName: "AWSCloudTrail_FullAccess"
    },
    [AckServiceName.ACM]: {
        chart: "acm-chart",
        version: "0.0.7",
        managedPolicyName: "AWSCertificateManagerFullAccess"
    },
    [AckServiceName.ROUTE53]: {
        chart: "route53-chart",
        version: "0.0.5",
        managedPolicyName: "AmazonRoute53FullAccess"
    },
    [AckServiceName.SQS]: {
        chart: "sqs-chart",
        version: "1.0.4",
        managedPolicyName: "AmazonSQSFullAccess"
    },
    [AckServiceName.SAGEMAKER]: {
        chart: "sagemaker-chart",
        version: "1.2.2",
        managedPolicyName: "AmazonSageMakerFullAccess"
    },
    [AckServiceName.EVENTBRIDGE]: {
        chart: "eventbridge-chart",
        version: "1.0.2",
        managedPolicyName: "AmazonEventBridgeFullAccess"
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VydmljZU1hcHBpbmdzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vbGliL2FkZG9ucy9hY2svc2VydmljZU1hcHBpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQVNBOztHQUVHO0FBQ0gsSUFBWSxjQTRCWDtBQTVCRCxXQUFZLGNBQWM7SUFDeEIsK0NBQTZCLENBQUE7SUFDN0IsbUVBQWlELENBQUE7SUFDakQsMkNBQXlCLENBQUE7SUFDekIsdUNBQXFCLENBQUE7SUFDckIsNkJBQVcsQ0FBQTtJQUNYLDZCQUFXLENBQUE7SUFDWCw2QkFBVyxDQUFBO0lBQ1gsNkNBQTJCLENBQUE7SUFDM0IsK0RBQTZDLENBQUE7SUFDN0MsaURBQStCLENBQUE7SUFDL0IsNkJBQVcsQ0FBQTtJQUNYLHFDQUFtQixDQUFBO0lBQ25CLDZCQUFXLENBQUE7SUFDWCxtQ0FBaUIsQ0FBQTtJQUNqQix1Q0FBcUIsQ0FBQTtJQUNyQiwyQkFBUyxDQUFBO0lBQ1QseURBQXVDLENBQUE7SUFDdkMseURBQXVDLENBQUE7SUFDdkMsNkJBQVcsQ0FBQTtJQUNYLDJCQUFTLENBQUE7SUFDVCw2QkFBVyxDQUFBO0lBQ1gsNkJBQVcsQ0FBQTtJQUNYLDZCQUFXLENBQUE7SUFDWCxxQ0FBbUIsQ0FBQTtJQUNuQiw2QkFBVyxDQUFBO0lBQ1gseUNBQXVCLENBQUE7SUFDdkIsNkNBQTJCLENBQUE7QUFDN0IsQ0FBQyxFQTVCVyxjQUFjLDhCQUFkLGNBQWMsUUE0QnpCO0FBRUQ7OztHQUdHO0FBQ1UsUUFBQSxlQUFlLEdBQWtEO0lBQzFFLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxFQUFFO1FBQ3BCLEtBQUssRUFBRSxXQUFXO1FBQ2xCLE9BQU8sRUFBRyxPQUFPO1FBQ2pCLGlCQUFpQixFQUFFLGVBQWU7S0FDbkM7SUFDRCxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsRUFBRTtRQUNwQixLQUFLLEVBQUUsV0FBVztRQUNsQixPQUFPLEVBQUcsT0FB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LEVBQUUsbUJBQW1CO1FBQzFCLE9BQU8sRUFBRyxPQUFPO1FBQ2pCLGlCQUFpQixFQUFFLDZCQUE2QjtLQUNqRDtDQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENoYXJ0IE1hcHBpbmcgZm9yIGZpZWxkcyBzdWNoIGFzIGNoYXJ0LCB2ZXJzaW9uLCBtYW5hZ2VkIElBTSBwb2xpY3kuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgQWNrQ2hhcnRNYXBwaW5nIHtcbiAgICBjaGFydDogc3RyaW5nLFxuICAgIHZlcnNpb246IHN0cmluZyxcbiAgICBtYW5hZ2VkUG9saWN5TmFtZTogc3RyaW5nXG59XG5cbi8qKlxuICogTGlzdCBvZiBhbGwgc3VwcG9ydGVkIHN1cHBvcnRlZCBBV1Mgc2VydmljZXMgYnkgQUNLIEFkZG9uLlxuICovXG5leHBvcnQgZW51bSBBY2tTZXJ2aWNlTmFtZSB7XG4gIEFQSUdBVEVXQVlWMiA9IFwiYXBpZ2F0ZXdheXYyXCIsXG4gIEFQUExJQ0FUSU9OQVVUT1NDQUxJTkcgPSBcImFwcGxpY2F0aW9uYXV0b3NjYWxpbmdcIixcbiAgQ0xPVURUUkFJTCA9IFwiY2xvdWR0cmFpbFwiLFxuICBEWU5BTU9EQiA9IFwiZHluYW1vZGJcIixcbiAgRUMyID0gXCJlYzJcIixcbiAgRUNSID0gXCJlY3JcIixcbiAgRUtTID0gXCJla3NcIixcbiAgRUxBU1RJQ0FDSEUgPSBcImVsYXN0aWNhY2hlXCIsXG4gIEVMQVNUSUNTRUFSQ0hTRVJWSUNFID0gXCJlbGFzdGljc2VhcmNoc2VydmljZVwiLFxuICBFTVJDT05UQUlORVJTID0gXCJlbXJjb250YWluZXJzXCIsXG4gIElBTSA9IFwiaWFtXCIsXG4gIEtJTkVTSVMgPSBcImtpbmVzaXNcIixcbiAgS01TID0gXCJrbXNcIixcbiAgTEFNQkRBID0gXCJsYW1iZGFcIixcbiAgTUVNT1JZREIgPSBcIm1lbW9yeWRiXCIsXG4gIE1RID0gXCJtcVwiLFxuICBPUEVOU0VBUkNIU0VSVklDRSA9IFwib3BlbnNlYXJjaHNlcnZpY2VcIixcbiAgUFJPTUVUSEVVU1NFUlZJQ0UgPSBcInByb21ldGhldXNzZXJ2aWNlXCIsXG4gIFJEUyA9IFwicmRzXCIsICBcbiAgUzMgPSBcInMzXCIsXG4gIFNGTiA9IFwic2ZuXCIsXG4gIFNOUyA9IFwic25zXCIsXG4gIEFDTSA9IFwiYWNtXCIsXG4gIFJPVVRFNTMgPSBcInJvdXRlNTNcIixcbiAgU1FTID0gXCJzcXNcIixcbiAgU0FHRU1BS0VSID0gXCJzYWdlbWFrZXJcIixcbiAgRVZFTlRCUklER0UgPSBcImV2ZW50YnJpZGdlXCJcbn1cblxuLyoqXG4gKiBMaXN0IG9mIGFsbCBTZXJ2aWNlIE1hcHBpbmdzIHN1Y2ggYXMgY2hhcnQsIHZlcnNpb24sIG1hbmFnZWQgSUFNIHBvbGljeSBcbiAqIGZvciBhbGwgc3VwcG9ydGVkIEFXUyBzZXJ2aWNlcyBieSBBQ0sgQWRkb24uXG4gKi9cbmV4cG9ydCBjb25zdCBzZXJ2aWNlTWFwcGluZ3MgOiB7W2tleSBpbiBBY2tTZXJ2aWNlTmFtZV0/OiBBY2tDaGFydE1hcHBpbmcgfSA9IHtcbiAgICBbQWNrU2VydmljZU5hbWUuSUFNXToge1xuICAgICAgY2hhcnQ6IFwiaWFtLWNoYXJ0XCIsXG4gICAgICB2ZXJzaW9uOiAgXCIxLjIuMlwiLFxuICAgICAgbWFuYWdlZFBvbGljeU5hbWU6IFwiSUFNRnVsbEFjY2Vzc1wiXG4gICAgfSxcbiAgICBbQWNrU2VydmljZU5hbWUuUkRTXToge1xuICAgICAgY2hhcnQ6IFwicmRzLWNoYXJ0XCIsXG4gICAgICB2ZXJzaW9uOiAgXCIxLjEuNVwiLFxuICAgICAgbWFuYWdlZFBvbGljeU5hbWU6IFwiQW1hem9uUkRTRnVsbEFjY2Vzc1wiXG4gICAgfSxcbiAgICBbQWNrU2VydmljZU5hbWUuRUMyXToge1xuICAgICAgY2hhcnQ6IFwiZWMyLWNoYXJ0XCIsXG4gICAgICB2ZXJzaW9uOiAgXCIxLjAuM1wiLFxuICAgICAgbWFuYWdlZFBvbGljeU5hbWU6IFwiQW1hem9uUkRTRnVsbEFjY2Vzc1wiXG4gICAgfSxcbiAgICBbQWNrU2VydmljZU5hbWUuUzNdOiB7XG4gICAgICBjaGFydDogXCJzMy1jaGFydFwiLFxuICAgICAgdmVyc2lvbjogIFwiMS4wLjRcIixcbiAgICAgIG1hbmFnZWRQb2xpY3lOYW1lOiBcIkFtYXpvblMzRnVsbEFjY2Vzc1wiXG4gICAgfSxcbiAgICBbQWNrU2VydmljZU5hbWUuRFlOQU1PREJdOiB7XG4gICAgICBjaGFydDogXCJkeW5hbW9kYi1jaGFydFwiLFxuICAgICAgdmVyc2lvbjogIFwiMS4xLjJcIixcbiAgICAgIG1hbmFnZWRQb2xpY3lOYW1lOiBcIkFtYXpvbkR5bmFtb0RCRnVsbEFjY2Vzc1wiXG4gICAgfSxcbiAgICBbQWNrU2VydmljZU5hbWUuRUNSXToge1xuICAgICAgY2hhcnQ6IFwiZWNyLWNoYXJ0XCIsXG4gICAgICB2ZXJzaW9uOiAgXCIxLjAuNVwiLFxuICAgICAgbWFuYWdlZFBvbGljeU5hbWU6IFwiQW1hem9uRUMyQ29udGFpbmVyUmVnaXN0cnlGdWxsQWNjZXNzXCJcbiAgICB9LFxuICAgIFtBY2tTZXJ2aWNlTmFtZS5TTlNdOiB7XG4gICAgICBjaGFydDogXCJzbnMtY2hhcnRcIixcbiAgICAgIHZlcnNpb246ICBcIjEuMC4yXCIsXG4gICAgICBtYW5hZ2VkUG9saWN5TmFtZTogXCJBbWF6b25TTlNGdWxsQWNjZXNzXCJcbiAgICB9LFxuICAgIFtBY2tTZXJ2aWNlTmFtZS5BUElHQVRFV0FZVjJdOiB7XG4gICAgICBjaGFydDogXCJhcGlnYXRld2F5djItY2hhcnRcIixcbiAgICAgIHZlcnNpb246ICBcIjEuMC40XCIsXG4gICAgICBtYW5hZ2VkUG9saWN5TmFtZTogXCJBbWF6b25BUElHYXRld2F5QWRtaW5pc3RyYXRvclwiXG4gICAgfSxcbiAgICBbQWNrU2VydmljZU5hbWUuRUxBU1RJQ0FDSEVdOiB7XG4gICAgICBjaGFydDogXCJlbGFzdGljYWNoZS1jaGFydFwiLFxuICAgICAgdmVyc2lvbjogIFwiMC4wLjI2XCIsXG4gICAgICBtYW5hZ2VkUG9saWN5TmFtZTogXCJBbWF6b25FbGFzdGlDYWNoZUZ1bGxBY2Nlc3NcIlxuICAgIH0sXG4gICAgW0Fja1NlcnZpY2VOYW1lLk9QRU5TRUFSQ0hTRVJWSUNFXToge1xuICAgICAgY2hhcnQ6IFwib3BlbnNlYXJjaHNlcnZpY2UtY2hhcnRcIixcbiAgICAgIHZlcnNpb246ICBcIjAuMC4xNlwiLFxuICAgICAgbWFuYWdlZFBvbGljeU5hbWU6IFwiQW1hem9uT3BlblNlYXJjaFNlcnZpY2VGdWxsQWNjZXNzXCJcbiAgICB9LFxuICAgIFtBY2tTZXJ2aWNlTmFtZS5NUV06IHtcbiAgICAgIGNoYXJ0OiBcIm1xLWNoYXJ0XCIsXG4gICAgICB2ZXJzaW9uOiAgXCIwLjAuMjhcIixcbiAgICAgIG1hbmFnZWRQb2xpY3lOYW1lOiBcIkFtYXpvbk1RRnVsbEFjY2Vzc1wiXG4gICAgfSxcbiAgICBbQWNrU2VydmljZU5hbWUuTEFNQkRBXToge1xuICAgICAgY2hhcnQ6IFwibGFtYmRhLWNoYXJ0XCIsXG4gICAgICB2ZXJzaW9uOiAgXCIxLjEuMFwiLFxuICAgICAgbWFuYWdlZFBvbGljeU5hbWU6IFwiQVdTTGFtYmRhX0Z1bGxBY2Nlc3NcIlxuICAgIH0sXG4gICAgW0Fja1NlcnZpY2VOYW1lLktNU106IHtcbiAgICAgIGNoYXJ0OiBcImttcy1jaGFydFwiLFxuICAgICAgdmVyc2lvbjogIFwiMS4wLjVcIixcbiAgICAgIG1hbmFnZWRQb2xpY3lOYW1lOiBcIkFXU0tleU1hbmFnZW1lbnRTZXJ2aWNlUG93ZXJVc2VyXCJcbiAgICB9LFxuICAgIFtBY2tTZXJ2aWNlTmFtZS5NRU1PUllEQl06IHtcbiAgICAgIGNoYXJ0OiBcIm1lbW9yeWRiLWNoYXJ0XCIsXG4gICAgICB2ZXJzaW9uOiAgXCIxLjAuMVwiLFxuICAgICAgbWFuYWdlZFBvbGljeU5hbWU6IFwiQW1hem9uTWVtb3J5REJGdWxsQWNjZXNzXCJcbiAgICB9LFxuICAgIFtBY2tTZXJ2aWNlTmFtZS5FS1NdOiB7XG4gICAgICBjaGFydDogXCJla3MtY2hhcnRcIixcbiAgICAgIHZlcnNpb246ICBcIjEuMC4zXCIsXG4gICAgICBtYW5hZ2VkUG9saWN5TmFtZTogXCJBbWF6b25FS1NDbHVzdGVyUG9saWN5XCJcbiAgICB9LFxuICAgIFtBY2tTZXJ2aWNlTmFtZS5BUFBMSUNBVElPTkFVVE9TQ0FMSU5HXToge1xuICAgICAgY2hhcnQ6IFwiYXBwbGljYXRpb25hdXRvc2NhbGluZy1jaGFydFwiLFxuICAgICAgdmVyc2lvbjogIFwiMS4wLjVcIixcbiAgICAgIG1hbmFnZWRQb2xpY3lOYW1lOiBcIkF1dG9TY2FsaW5nRnVsbEFjY2Vzc1wiXG4gICAgfSxcbiAgICBbQWNrU2VydmljZU5hbWUuRUxBU1RJQ1NFQVJDSFNFUlZJQ0VdOiB7XG4gICAgICBjaGFydDogXCJlbGFzdGljc2VhcmNoc2VydmljZS1jaGFydFwiLFxuICAgICAgdmVyc2lvbjogIFwiMC4wLjJcIixcbiAgICAgIG1hbmFnZWRQb2xpY3lOYW1lOiBcIkFtYXpvbkVsYXN0aWNzZWFyY2hTZXJ2aWNlUm9sZVBvbGljeVwiXG4gICAgfSxcbiAgICBbQWNrU2VydmljZU5hbWUuUFJPTUVUSEVVU1NFUlZJQ0VdOiB7XG4gICAgICBjaGFydDogXCJwcm9tZXRoZXVzc2VydmljZS1jaGFydFwiLFxuICAgICAgdmVyc2lvbjogIFwiMS4yLjNcIixcbiAgICAgIG1hbmFnZWRQb2xpY3lOYW1lOiBcIkFtYXpvblByb21ldGhldXNGdWxsQWNjZXNzXCJcbiAgICB9LFxuICAgIFtBY2tTZXJ2aWNlTmFtZS5FTVJDT05UQUlORVJTXToge1xuICAgICAgY2hhcnQ6IFwiZW1yY29udGFpbmVycy1jaGFydFwiLFxuICAgICAgdmVyc2lvbjogIFwiMS4wLjJcIixcbiAgICAgIG1hbmFnZWRQb2xpY3lOYW1lOiBcIkFtYXpvbkVNUkNvbnRhaW5lcnNTZXJ2aWNlUm9sZVBvbGljeVwiXG4gICAgfSxcbiAgICBbQWNrU2VydmljZU5hbWUuU0ZOXToge1xuICAgICAgY2hhcnQ6IFwic2ZuLWNoYXJ0XCIsXG4gICAgICB2ZXJzaW9uOiAgXCIxLjAuM1wiLFxuICAgICAgbWFuYWdlZFBvbGljeU5hbWU6IFwiQVdTU3RlcEZ1bmN0aW9uc0Z1bGxBY2Nlc3NcIlxuICAgIH0sXG4gICAgW0Fja1NlcnZpY2VOYW1lLktJTkVTSVNdOiB7XG4gICAgICBjaGFydDogXCJraW5lc2lzLWNoYXJ0XCIsXG4gICAgICB2ZXJzaW9uOiAgXCIwLjAuN1wiLFxuICAgICAgbWFuYWdlZFBvbGljeU5hbWU6IFwiQW1hem9uS2luZXNpc0Z1bGxBY2Nlc3NcIlxuICAgIH0sXG4gICAgW0Fja1NlcnZpY2VOYW1lLkNMT1VEVFJBSUxdOiB7XG4gICAgICBjaGFydDogXCJjbG91ZHRyYWlsLWNoYXJ0XCIsXG4gICAgICB2ZXJzaW9uOiAgXCIxLjAuM1wiLFxuICAgICAgbWFuYWdlZFBvbGljeU5hbWU6IFwiQVdTQ2xvdWRUcmFpbF9GdWxsQWNjZXNzXCJcbiAgICB9LFxuICAgIFtBY2tTZXJ2aWNlTmFtZS5BQ01dOiB7XG4gICAgICBjaGFydDogXCJhY20tY2hhcnRcIixcbiAgICAgIHZlcnNpb246ICBcIjAuMC43XCIsXG4gICAgICBtYW5hZ2VkUG9saWN5TmFtZTogXCJBV1NDZXJ0aWZpY2F0ZU1hbmFnZXJGdWxsQWNjZXNzXCJcbiAgICB9LFxuICAgIFtBY2tTZXJ2aWNlTmFtZS5ST1VURTUzXToge1xuICAgICAgY2hhcnQ6IFwicm91dGU1My1jaGFydFwiLFxuICAgICAgdmVyc2lvbjogIFwiMC4wLjVcIixcbiAgICAgIG1hbmFnZWRQb2xpY3lOYW1lOiBcIkFtYXpvblJvdXRlNTNGdWxsQWNjZXNzXCJcbiAgICB9LFxuICAgIFtBY2tTZXJ2aWNlTmFtZS5TUVNdOiB7XG4gICAgICBjaGFydDogXCJzcXMtY2hhcnRcIixcbiAgICAgIHZlcnNpb246ICBcIjEuMC40XCIsXG4gICAgICBtYW5hZ2VkUG9saWN5TmFtZTogXCJBbWF6b25TUVNGdWxsQWNjZXNzXCJcbiAgICB9LFxuICAgIFtBY2tTZXJ2aWNlTmFtZS5TQUdFTUFLRVJdOiB7XG4gICAgICBjaGFydDogXCJzYWdlbWFrZXItY2hhcnRcIixcbiAgICAgIHZlcnNpb246ICBcIjEuMi4yXCIsXG4gICAgICBtYW5hZ2VkUG9saWN5TmFtZTogXCJBbWF6b25TYWdlTWFrZXJGdWxsQWNjZXNzXCJcbiAgICB9LFxuICAgIFtBY2tTZXJ2aWNlTmFtZS5FVkVOVEJSSURHRV06IHtcbiAgICAgIGNoYXJ0OiBcImV2ZW50YnJpZGdlLWNoYXJ0XCIsXG4gICAgICB2ZXJzaW9uOiAgXCIxLjAuMlwiLFxuICAgICAgbWFuYWdlZFBvbGljeU5hbWU6IFwiQW1hem9uRXZlbnRCcmlkZ2VGdWxsQWNjZXNzXCJcbiAgICB9XG59O1xuIl19