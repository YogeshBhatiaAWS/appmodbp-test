"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.cloneDeep = exports.setPath = void 0;
const aws_eks_1 = require("aws-cdk-lib/aws-eks");
const lodash_1 = require("lodash");
const nutil = require("node:util/types");
const setPath = (obj, path, val) => {
    const keys = path.split('.');
    const lastKey = keys.pop();
    const lastObj = keys.reduce((obj, key) => obj[key] = obj[key] || {}, obj);
    lastObj[lastKey] = val;
};
exports.setPath = setPath;
/**
 * Creates a deep clone of an object, retaining types.
 * @param source
 * @param resolveFn if passed, this function can perform transformation (e.g. resolve proxies)
 * @returns
 */
function cloneDeep(source, resolveFn) {
    return (0, lodash_1.cloneDeepWith)(source, (value) => {
        if (value && (value instanceof aws_eks_1.KubernetesVersion || nutil.isProxy(value))) {
            return resolveFn ? resolveFn(value) : value;
        }
        return undefined;
    });
}
exports.cloneDeep = cloneDeep;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib2JqZWN0LXV0aWxzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vbGliL3V0aWxzL29iamVjdC11dGlscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxpREFBd0Q7QUFDeEQsbUNBQXVDO0FBQ3ZDLHlDQUF5QztBQUVsQyxNQUFNLE9BQU8sR0FBRyxDQUFDLEdBQVMsRUFBRSxJQUFZLEVBQUUsR0FBUSxFQUFFLEVBQUU7SUFDekQsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUM3QixNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFHLENBQUM7SUFDNUIsTUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsRUFBRSxDQUNyQyxHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsR0FBRyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsRUFDekIsR0FBRyxDQUFDLENBQUM7SUFDVCxPQUFPLENBQUMsT0FBTyxDQUFDLEdBQUcsR0FBRyxDQUFDO0FBQzNCLENBQUMsQ0FBQztBQVBXLFFBQUEsT0FBTyxXQU9sQjtBQUVGOzs7OztHQUtHO0FBQ0gsU0FBZ0IsU0FBUyxDQUFJLE1BQVMsRUFBRSxTQUE2QjtJQUNqRSxPQUFPLElBQUEsc0JBQWEsRUFBQyxNQUFNLEVBQUUsQ0FBQyxLQUFLLEVBQUUsRUFBRTtRQUNuQyxJQUFHLEtBQUssSUFBSSxDQUFDLEtBQUssWUFBWSwyQkFBaUIsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUU7WUFDdEUsT0FBTyxTQUFTLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO1NBQy9DO1FBQ0QsT0FBTyxTQUFTLENBQUM7SUFDckIsQ0FBQyxDQUFDLENBQUM7QUFDUCxDQUFDO0FBUEQsOEJBT0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBLdWJlcm5ldGVzVmVyc2lvbiB9IGZyb20gXCJhd3MtY2RrLWxpYi9hd3MtZWtzXCI7XG5pbXBvcnQgeyBjbG9uZURlZXBXaXRoIH0gZnJvbSAnbG9kYXNoJztcbmltcG9ydCAqIGFzIG51dGlsIGZyb20gJ25vZGU6dXRpbC90eXBlcyc7XG5cbmV4cG9ydCBjb25zdCBzZXRQYXRoID0gKG9iaiA6IGFueSwgcGF0aDogc3RyaW5nLCB2YWw6IGFueSkgPT4geyBcbiAgICBjb25zdCBrZXlzID0gcGF0aC5zcGxpdCgnLicpO1xuICAgIGNvbnN0IGxhc3RLZXkgPSBrZXlzLnBvcCgpITtcbiAgICBjb25zdCBsYXN0T2JqID0ga2V5cy5yZWR1Y2UoKG9iaiwga2V5KSA9PiBcbiAgICAgICAgb2JqW2tleV0gPSBvYmpba2V5XSB8fCB7fSwgXG4gICAgICAgIG9iaik7IFxuICAgIGxhc3RPYmpbbGFzdEtleV0gPSB2YWw7XG59O1xuXG4vKipcbiAqIENyZWF0ZXMgYSBkZWVwIGNsb25lIG9mIGFuIG9iamVjdCwgcmV0YWluaW5nIHR5cGVzLiBcbiAqIEBwYXJhbSBzb3VyY2UgXG4gKiBAcGFyYW0gcmVzb2x2ZUZuIGlmIHBhc3NlZCwgdGhpcyBmdW5jdGlvbiBjYW4gcGVyZm9ybSB0cmFuc2Zvcm1hdGlvbiAoZS5nLiByZXNvbHZlIHByb3hpZXMpXG4gKiBAcmV0dXJucyBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNsb25lRGVlcDxUPihzb3VyY2U6IFQsIHJlc29sdmVGbj86IChhcmc6IGFueSkgPT4gYW55ICk6IFQge1xuICAgIHJldHVybiBjbG9uZURlZXBXaXRoKHNvdXJjZSwgKHZhbHVlKSA9PiB7XG4gICAgICAgIGlmKHZhbHVlICYmICh2YWx1ZSBpbnN0YW5jZW9mIEt1YmVybmV0ZXNWZXJzaW9uIHx8IG51dGlsLmlzUHJveHkodmFsdWUpKSkge1xuICAgICAgICAgICAgcmV0dXJuIHJlc29sdmVGbiA/IHJlc29sdmVGbih2YWx1ZSkgOiB2YWx1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH0pO1xufVxuXG5leHBvcnQgdHlwZSBXcml0ZWFibGU8VD4gPSB7IC1yZWFkb25seSBbUCBpbiBrZXlvZiBUXTogVFtQXSB9OyJdfQ==